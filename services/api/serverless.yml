service: first

variablesResolutionMode: 20210326

projectDir: ..

plugins:
  - serverless-esbuild
  - serverless-iam-roles-per-function

package:
  individually: true

custom:
  project: ${file(../config.yml):project}
  baseName: ${self:custom.project}-${self:service}-${self:provider.stage}

  esbuild:
    packager: yarn
    platform: node
    target: node14
    bundle: true
    minify: true
    sourcemap: true

  serverless-iam-roles-per-function:
    defaultInherit: true
  
  tableName: ${ssm:/${self:custom.project}/${self:provider.stage}/common/tableName, ''}

  prodApi: ${ssm:/${self:custom.project}/${self:provider.stage}/external-api/apiEndpoint, ''}
  mockApi: ${ssm:/${self:custom.project}/${self:provider.stage}/mock-external-api/apiEndpoint, ''}

  apiByEnv:
    prod: ${self:custom.prodApi}
    staging: ${self:custom.prodApi}
  api: ${self:custom.apiByEnv.${self:provider.stage}, self:custom.mockApi}

provider:
  name: aws
  region: ${opt:region, 'eu-west-1'}
  stage: ${opt:stage, 'dev'}
  stackName: ${self:custom.baseName}
  stackTags: ${file(../config.yml):tags}
  deploymentBucket:
    # deploys to common serverless deployment bucket
    name: ${cf:${self:custom.project}-common-${self:provider.stage}.ServerlessDeploymentBucketName}
  runtime: nodejs14.x
  memorySize: 128
  timeout: 30
  logRetentionInDays: 7
  versionFunctions: false
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    NODE_OPTIONS: "--enable-source-maps"
    LOG_LEVEL: ${file(../config.yml):logLevel}
    ENVIRONMENT: ${self:provider.stage}
  httpApi:
    shouldStartNameWithService: true
    cors:
      allowedOrigins:
        - '*'
      allowedMethods:
        - GET
      allowedHeaders:
        - Content-Type
  iam:
    role:
      name: ${self:custom.baseName}-provider
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:log-stream:*


functions:
  example:
    handler: src/index.handler
    environment:
      API_ENDPOINT: ${self:custom.api}
      TABLE_NAME: ${self:custom.tableName}
    events:
      - httpApi:
          path: /case/{id}
          method: GET
